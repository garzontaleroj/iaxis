<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ page import= "axis.util.Constantes, axis.cache.ConfigCache" %> 
<%/*
* Fichero: carga_framework_js.jsp
* @author <a href = "mailto:xgallego@csi-ti.com">Xavi Gallego</a>
* 
* El siguiente código genera el framework propio de javascript, con todos sus mensajes cargados de un bundle y todo.
* 
* Fecha: 19/10/2007
*/  
%>
        <c:if test="${empty applicationScope.__formatNumberPatterns }">
            <c:set var="__formatNumberPatterns" value="<%= Constantes.FORMAT_CURRENCY_PATTERNS %>" scope="application" />
            <c:set var="__defaultCMONINT" value="<%= Constantes.DEFAULT_CMONINT %>" scope="application" />
            <c:set var="__defaultCMONEDA" value="<%= Constantes.DEFAULT_CMONEDA %>" scope="application" />
            <c:set var="__formatNumberPorcentajeDefault" value="###,##0.00" scope="application" />
        </c:if>

        <%//cargarBundle.jsp:Carga el bundle de jsMensajes y luego el bundle de mensajes
        //Por tanto, al añadir este jsp en algun sitio, no hace falta hacer setBundle
        %>
        <%@ include file="/scripts/cargarBundle.jsp"%>
        <script type="text/javascript" src="scripts/json2.js"></script>
        <script type="text/javascript" src="scripts/jsJson2.js"></script>
        <script type="text/javascript" src="scripts/jsValidador.js"></script>
        <script type="text/javascript" src="scripts/jsAlert.js"></script>
        <script type="text/javascript" src="scripts/jsUtiles.js"></script>
        <script type="text/javascript" src="scripts/jsFecha.js"></script>
        <script type="text/javascript" src="scripts/jsNumero.js"></script>
        <script type="text/javascript" src="scripts/jsCorreo.js"></script>
        <script type="text/javascript" src="scripts/jsTelefono.js"></script>
        <script type="text/javascript" src="scripts/jsNif.js"></script>
        <script type="text/javascript" src="scripts/jsCodigoPostal.js"></script>
        <script type="text/javascript" src="scripts/jsHora.js"></script>
        <script type="text/javascript" src="scripts/jsbn.js"></script>
        <script type="text/javascript" src="scripts/jsbn2.js"></script>
        <script type="text/javascript" src="scripts/jsIban.js"></script>
        <script type="text/javascript" src="scripts/jsDom.js"></script>
        <script type="text/javascript" src="scripts/jsLista.js"></script>
        <script type="text/javascript" src="scripts/jsAppMensajes.js"></script>
        <script type="text/javascript" src="scripts/jsEventos.js"></script>
        <script type="text/javascript" src="scripts/jsAjax.js"></script>
        <script type="text/javascript" src="scripts/jsEstilos.js"></script>
        <script type="text/javascript" src="scripts/jsAyuda.js"></script>
        <script type="text/javascript" src="scripts/jsDependencias.js"></script>
        <script type="text/javascript" src="scripts/jsEdicionTexto.js"></script>
        <!-- Especial per controlar els scroll amb iPad -->
        <script type="text/javascript" src="scripts/jquery-1.7.1.min.js"></script>
        <script type="text/javascript" src="scripts/jquery.import_js.js"></script>
        <script type="text/javascript" src="scripts/jscroll.js"></script>
        <!-- FI Especial per controlar els scroll amb iPad -->
        <script type="text/javascript" src="scripts/jquery.cookie.js"></script>
        <script type="text/javascript" src="scripts/jsSeccion.js"></script>
        
        <script type="text/javascript">
            var objUtiles = new JsUtiles();
            //Objeto para printear las validaciones segun locale (partiendo de jsMesssages.properties)
            var objJsMessages = new JsMessages();
            //Definimos los objetos genéricos para poder trabajar con ellos en todo el aplicativo
            var objAlert = new JsAlert();
            var objValidador = new JsValidador();
            var objNumero = new JsNumero();
            objNumero.init('${sessionScope.__locale_formato_numerico}');   
        <c:forEach items="${__formatNumberPatterns}" var="item">
            objNumero.addFormatNumberPatterns('${item.key}','${item.value}');   
        </c:forEach>  
            objNumero.setFormatDefault('${__formatNumberPatterns[__defaultCMONINT]}');  
            objNumero.setDefaultCMONEDA('${__defaultCMONEDA}');   
            objNumero.setDefaultCMONINT('${__defaultCMONINT}');   
            var objDom = new JsDom();
            var objLista = new JsLista();
            var objAppMensajes = new JsAppMensajes();
            var objEventos = new JsEventos();
            var objAjax = new JsAjax();
            var objEstilos = new JsEstilos();
            var objAyuda = new JsAyuda();
            var objDependencias = new JsDependencias();
            var objEdicionTexto = new JsEdicionTexto();
            var isDebugAjaxEnabled = '${applicationScope.isDebugAjaxEnabled}';
            var nuevaVentana      = null;
            var idVentanas        = new Array();
            var contadorVentanas  = 0;
            var toggles_js = new Array();
            var objSeccion = new JsSeccion();
       

    
    
            //Función para abrir docs de GEDOX,  XPL
            this.f_ver_doc = function(IDDOC){
                //document.miForm.IDDOC.value = IDDOC;
                nuevaVentana = window.open("modal_axisgedox.do?operation=tunnel&IDDOC=" + IDDOC);    
                   
                // Abrir un proceso con setInterval para cerrar la ventana recién abierta
                
                if (document.all) {
                    idVentanas[contadorVentanas] = setInterval("f_cerrar_nuevaVentana()", 100);
                    contadorVentanas++;
                }  
            }  
             this.f_cerrar_nuevaVentana = function(){
                    try {
                        if (nuevaVentana != null && nuevaVentana.document.readyState != 'loading') {
                            nuevaVentana.window.close();
                        }
                    } catch (e) {}
                } 
            
            /*** Prevenir Backspace y F5 en IE6 ***/   
            if (document.all && navigator.userAgent.indexOf("MSIE 6.0") > -1) {
                document.onkeydown = function() {                     
                    if ( window.event && ( (window.event.keyCode == 8  && window.event.srcElement.type != "password") || window.event.keyCode == 116 )  ) {

                          if((window.event.srcElement.type != "text" && window.event.srcElement.type != "textarea") || (window.event.srcElement.disabled==true || window.event.srcElement.readOnly==true )){

                            window.event.keyCode = 505; 
                          }
                    }
                    
                    if (window.event.keyCode == 505) { 
                        return false; 
                    }
                }
            }               
            /*****/
            
            <%
            //Si en la pantalla que cargamos, hay campos asociados a displayTags (DSP_XXX)
            if(request.getAttribute("DISPLAY_ITEMS")!=null){
            %>
                function f_tratarDisplayTagsPorConfiguracion(){
                    try{
                        <%
                        int valores_defecto_size = ((java.util.List)request.getAttribute("DISPLAY_ITEMS")).size();
                        for(int i=0;i<valores_defecto_size;i++){ 
                        %>
                            var CAMPOID = '<%=(String)((java.util.Map)((java.util.List)request.getAttribute("DISPLAY_ITEMS")).get(i)).get("CAMPOID")%>';
                            var visible = '<%=(String)((java.util.Map)((java.util.List)request.getAttribute("DISPLAY_ITEMS")).get(i)).get("visible")%>';
                            var modificable = '<%=(String)((java.util.Map)((java.util.List)request.getAttribute("DISPLAY_ITEMS")).get(i)).get("modificable")%>';
                      //      alert("El campo: " + CAMPOID + " tiene el valor modificable: " + modificable + " y el visible a: " +visible);
                            
                            //Acción para deshabilitar un multiregistro (debe ser visible, modificable y debe existir un div con el mismo id=DSP_XXX en el multiregistro)
                            if(document.getElementById(CAMPOID) && objUtiles.utilEquals(visible, "true") && objUtiles.utilEquals(modificable, "false"))
                                objDom.setVisibilidadPorId(CAMPOID, "visible");
                            
                        <%
                        }
                        %>
                    } catch (e) {
                        if (isDebugAjaxEnabled == "true")
                        alert (e.name + " " + e.message);
                    }
                }
            <%
            }else{
            %>
                function f_tratarDisplayTagsPorConfiguracion(){} 
            <%
            }
            %>
            
            <%
            //Si en la pantalla que cargamos, hay campos con algun valor por defecto o no
            if(request.getAttribute("VALOR_POR_DEFECTO")!=null){
            %>
                //Método que gestiona los campos que tienen valores por defecto
                function f_cargar_valores_defecto(){
                    try{
                        <%
                        int valores_defecto_size = ((java.util.List)request.getAttribute("VALOR_POR_DEFECTO")).size();
                       
                        for(int i=0;i<valores_defecto_size;i++){ 
                            String campoid = (String)((java.util.Map)((java.util.List)request.getAttribute("VALOR_POR_DEFECTO")).get(i)).get("CAMPOID");
                            String valor = (String)((java.util.Map)((java.util.List)request.getAttribute("VALOR_POR_DEFECTO")).get(i)).get("VALOR");
                            request.getSession().setAttribute(campoid+"__DEFAULT",valor);
                        %>
                            var CAMPOID = '<%=(String)((java.util.Map)((java.util.List)request.getAttribute("VALOR_POR_DEFECTO")).get(i)).get("CAMPOID")%>';
                            var VALOR = '<%=(String)((java.util.Map)((java.util.List)request.getAttribute("VALOR_POR_DEFECTO")).get(i)).get("VALOR")%>';
                            

                            
                            //alert("El campo: " + CAMPOID + " tiene el valor: " + VALOR);
                            
                            //Si no tiene ningún valor asociado (expresamente de DB), carga el valor por defecto.
                            var integerMinValue = '<%= Integer.MIN_VALUE %>';
                            if(objUtiles.estaVacio(objDom.getValorPorId(CAMPOID)) ||
                            	 objUtiles.utilEquals(objDom.getValorPorId(CAMPOID), "null") ||
                                 objUtiles.utilEquals(objDom.getValorPorId(CAMPOID), integerMinValue)) {
                               
                                if(objUtiles.utilEquals(document.getElementById(CAMPOID).type,"checkbox") || objUtiles.utilEquals(document.getElementById(CAMPOID).type,"radio") ){
                                    if(VALOR==1){
                                       document.getElementById(CAMPOID).checked = true;
                                    }else{
                                        document.getElementById(CAMPOID).checked = false;
                                    }
                                }else{
                                    objDom.setValorPorId(CAMPOID, VALOR);
                                }
                            
                             
                             }
                             /* 
                             // Bug 17191 - RSC - 07/01/2010 - Traspaso PPA a PPA 
                             
                             else{
                                
                                if(objUtiles.utilEquals(document.getElementById(CAMPOID).type,"checkbox") || objUtiles.utilEquals(document.getElementById(CAMPOID).type,"radio") ){
                                    if(VALOR==1){
                                   
                                    document.getElementById(CAMPOID).checked = true;
                                    }else{
                                    
                                    document.getElementById(CAMPOID).checked = false;
                                    }
                                }
                             }
                             
                             // Fin bug 17191
                             */
                            
                        <%
                        }
                        %>
                    } catch (e) {
                        if (isDebugAjaxEnabled == "true")
                        alert (e.name + " " + e.message);
                    }
                }
            <%
            }else{
            %>
                function f_cargar_valores_defecto(){}  
            <%
            }
            
            
            //Si en la pantalla que cargamos, hay dependencias o no
            if(request.getAttribute("NUM_DEPENDENCIAS")!=null){
            %>
            //XPL#17313#18/01/2011
            //Función donde miramos si existe algun valor especificio para el campo de la dependencia,
            //en caso de que haya valor para el campo de pantalla en la configuración que nos llega
            //de bd no haremos caso a la configuración del notnull        
            function f_prevalece_especificio(__CITORIG,__TVALORIG){
            try{ 
              //Miramos si el valor a evaluar es notnull
              if    (  objUtiles.utilEquals(__TVALORIG, 'notnull')    ){
                
                 var propiedades = objDependencias.cargaPropiedadesPantalla();
                <%
                int dependencias_sizes = ((java.lang.Integer)request.getAttribute("NUM_DEPENDENCIAS")).intValue();
                for(int x=0;x<dependencias_sizes;x++){
                    for(int jj=0;jj<((java.util.List)request.getAttribute("DEPENDENCIA"+java.lang.Integer.toString(x))).size();jj++){
                    %>
                   //recorremos las dependencias que nos llegan de BD 
                     var CITORIG = '<%=(String)((java.util.Map)((java.util.List)request.getAttribute("DEPENDENCIA"+java.lang.Integer.toString(x))).get(jj)).get("CITORIG")%>';
                     var TVALORIG = '<%=(String)((java.util.Map)((java.util.List)request.getAttribute("DEPENDENCIA"+java.lang.Integer.toString(x))).get(jj)).get("TVALORIG")%>';
                     
                     if    (  objUtiles.utilEquals(__CITORIG, CITORIG)                ){
                         if(!objUtiles.estaVacio(((document.getElementById(CITORIG)!=undefined)? objDom.getValorPorId(CITORIG) : null)))
                                {
                                  if(objUtiles.utilEquals(objDom.getValorPorId(CITORIG), TVALORIG)) {
                                        //Si coincide el valor del campo de pantalla con lo que nos
                                        //llega de BD no seguimos y devolvemos un 1 para parar la ejecución del 
                                        //not null
                                        return 1;

                                   }
                            }
                     }
                     
                     
                     <% }
                     }%>
                }   
                return 0;
                }catch(e){
                    return 0;
                }
            
            }
                //Método que gestiona las dependencias de cada pantalla
                function f_carga_dependencias(){
                    try{
                        var propiedades = objDependencias.cargaPropiedadesPantalla();
                        <%
                        int dependencias_size = ((java.lang.Integer)request.getAttribute("NUM_DEPENDENCIAS")).intValue();
                        for(int i=0;i<dependencias_size;i++){
                            for(int j=0;j<((java.util.List)request.getAttribute("DEPENDENCIA"+java.lang.Integer.toString(i))).size();j++){
                            %>
                                var CITORIG = '<%=(String)((java.util.Map)((java.util.List)request.getAttribute("DEPENDENCIA"+java.lang.Integer.toString(i))).get(j)).get("CITORIG")%>';
                                var TVALORIG = '<%=(String)((java.util.Map)((java.util.List)request.getAttribute("DEPENDENCIA"+java.lang.Integer.toString(i))).get(j)).get("TVALORIG")%>';
                                var CITDEST = '<%=(String)((java.util.Map)((java.util.List)request.getAttribute("DEPENDENCIA"+java.lang.Integer.toString(i))).get(j)).get("CITDEST")%>';
                                var CPRPTY = <%=(java.math.BigDecimal)((java.util.Map)((java.util.List)request.getAttribute("DEPENDENCIA"+java.lang.Integer.toString(i))).get(j)).get("CPRPTY")%>;
                                var TVALUE = <%=(java.math.BigDecimal)((java.util.Map)((java.util.List)request.getAttribute("DEPENDENCIA"+java.lang.Integer.toString(i))).get(j)).get("TVALUE")%>;
                                
                                var hayespecifico = f_prevalece_especificio(CITORIG,TVALORIG);
                                
                                if (hayespecifico  == 0){
                                    if(!objUtiles.estaVacio(((document.getElementById(CITORIG)!=undefined)? objDom.getValorPorId(CITORIG) : null)))
                                    {
                                      if(objUtiles.utilEquals(objDom.getValorPorId(CITORIG), TVALORIG) || 
                                         (!objUtiles.estaVacio(document.getElementById(CITORIG)) && objUtiles.utilEquals ('notnull', TVALORIG))
                                        )
                                      {
                                         if (CPRPTY == 8){
                                         <%
                                         request.setAttribute("TVALOR",(java.math.BigDecimal)((java.util.Map)((java.util.List)request.getAttribute("DEPENDENCIA"+java.lang.Integer.toString(i))).get(j)).get("TVALUE"));
                                         %>
                                         TVALUE = "<axis:alt f="carga_framework" c="TVALOR1" lit="${requestScope.TVALOR}"/>";
                                         }
                                         
                                         
                                         
                                         objDependencias.cambiarPropiedades(CITDEST, CPRPTY, TVALUE, propiedades);
                                      }
                                    } else {
                                        if (objUtiles.utilEquals ('null', TVALORIG)) 
                                        {
                                         if (CPRPTY == 8){
                                         <%
                                         request.setAttribute("TVALOR",(java.math.BigDecimal)((java.util.Map)((java.util.List)request.getAttribute("DEPENDENCIA"+java.lang.Integer.toString(i))).get(j)).get("TVALUE"));
                                         %>
                                         TVALUE = "<axis:alt f="carga_framework" c="TVALOR2" lit="${requestScope.TVALOR}"/>";
                                         }
                                         objDependencias.cambiarPropiedades(CITDEST, CPRPTY, TVALUE, propiedades);
                                        }
                                    }
                                }
                            <%
                            }
                        }
                        %>
                    } catch (e) {
                        if (isDebugAjaxEnabled == "true")
                            alert (e.name + " " + e.message);
                    }
                }
            <%    
            } else { 
            %>
                function f_carga_dependencias(){
                }
            <% } %>
            
            function f_clear_resources(d) {            
                try {
                    objUtiles       = null;
                    objJsMessages   = null;                
                    objAlert        = null;
                    objValidador    = null;                
                    objNumero       = null;                
                    objDom          = null;
                    objLista        = null;
                    objAppMensajes  = null;
                    objEventos      = null;
                    objAjax         = null;
                    objEstilos      = null;
                    objAyuda        = null;
                    objDependencias = null;
                    
                    var a = d.attributes, i, l, n;
                    if (a) {
                        l = a.length;
                        for (i = 0; i < l; i += 1) {
                            n = a[i].name;                        
                            // if (typeof d[n] === 'function') {
                                d[n] = null;
                            // }
                        }
                    }
                    a = d.childNodes;
                    if (a) {
                        l = a.length;
                        for (i = 0; i < l; i += 1) {
                            f_clear_resources(d.childNodes[i]);
                        }
                    }
                } catch (e) {}                        
            }
         function f_cargapropietatexpander_arbol() {            
                try {
                <%
                   java.util.Map configuracio =(java.util.Map)request.getAttribute("__configform");
                   
                       java.util.Iterator it = configuracio.entrySet().iterator();
                        while (it.hasNext()) {
                            java.util.Map.Entry e = (java.util.Map.Entry)it.next();
                            %>
                            var form      = objUtiles.utilSplit("<%=e.getKey()%>", "__")[0];
                            var camp      = objUtiles.utilSplit("<%=e.getKey()%>", "__")[1];
                            var propietat = objUtiles.utilSplit("<%=e.getKey()%>", "__")[2];
                            var valor     = "<%=e.getValue()%>";
                          
                            if (!objUtiles.estaVacio(propietat) && propietat == "expander" && 
                                !objUtiles.estaVacio(valor)     && valor     == "true"){
                                   try{
                                    f_abrir_secciones_js(camp, document.getElementById(camp + "_parent"));
                                  }catch(e){}
                                }
                           
                        <%}%>
                } catch (e) {}  
                
            }  
            
            function f_abrir_secciones_js (ths, objeto, img_mes, img_menys) {
               
            var pimg_mes="images/mes.gif"
            var pimg_menys="images/menys.gif"
            
            if (img_mes!=undefined || img_mes!=null) pimg_mes=img_mes;
            if (img_menys!=undefined || img_menys!=null) pimg_menys=img_menys;
            
	    var thisChildrenId=ths+"_children";
            if (document.getElementById(thisChildrenId)!=null){
                var actualDisplayValue=document.getElementById(thisChildrenId).style.display;
            }
                
            var resto = document.getElementsByTagName("tr");
		
            for (i=0; i < resto.length; i++) {            
                if(resto[i].getAttribute("tipo")=='cont'){
                     resto[i].style.display="none";
                }
            }

            if (actualDisplayValue=="none"){ 
                actualDisplayValue="";// en vez de "block", mejor "" para evitar FireFox bug
                  var imagen =	document.getElementById("img_"+ths);
                      if ( imagen.src.indexOf("plus.gif") > -1)
                     	pimg_menys = "images/minus.gif";
                     else if ( imagen.src.indexOf("plusbottom.gif")  > -1 )
                     	pimg_menys = "images/minusbottom.gif";
		
                					                      
                    toggles_js[toggles_js.length]= ths;  
                    
                if ( !objUtiles.estaVacio(imagen)) {imagen.src=pimg_menys; }//"images/menys.gif";
            }else{ 
                actualDisplayValue="none";
                   var imagen =	document.getElementById("img_"+ths);
               			if ( imagen.src.indexOf("minus.gif")  > -1)
                     	pimg_mes = "images/plus.gif";
                     else if ( imagen.src.indexOf("minusbottom.gif")  > -1)
                     	pimg_mes = "images/plusbottom.gif";     
                        toggles_js[toggles_js.length]= ths;
                        
                if ( !objUtiles.estaVacio(imagen)) imagen.src=pimg_mes;//"images/mes.gif";
            }
            if (document.getElementById(thisChildrenId)!=null){
                document.getElementById(thisChildrenId).style.display=actualDisplayValue;
            }
          }          

         function f_cargapropietatexpander() {            
                try {
                <%
                  configuracio =(java.util.Map)request.getAttribute("__configform");
                   
                        it = configuracio.entrySet().iterator();
                        while (it.hasNext()) {
                            java.util.Map.Entry e = (java.util.Map.Entry)it.next();
                            %>
                            var form      = objUtiles.utilSplit("<%=e.getKey()%>", "__")[0];
                            var camp      = objUtiles.utilSplit("<%=e.getKey()%>", "__")[1];
                            var propietat = objUtiles.utilSplit("<%=e.getKey()%>", "__")[2];
                            var valor     = "<%=e.getValue()%>";
                          
                            if (!objUtiles.estaVacio(propietat) && propietat == "expander" && 
                                !objUtiles.estaVacio(valor)     && valor     == "true"){
                                 if (!objUtiles.estaVacio( document.getElementById(camp + "_parent") ) ){
                                     objEstilos.toggleDisplay(camp, document.getElementById(camp + "_parent"));
                                  }
                                }
                           
                        <%}%>
                } catch (e) {}                        
            }            

        function revisarEstilos() {
            var itemsArray=null;
            var emptyClassAttribute = document.createAttribute("class");
            emptyClassAttribute.nodeValue = "";
            
            // Inici BUG 26923 - 12/07/2013 - RCL
            //Llista d´elements a revisar estils
            $.each([ "input", "select", "textarea" ],function(indice,valor) 
            {
                itemsArray=document.getElementsByTagName(valor);
                if (itemsArray!=null && itemsArray!=undefined) {
                    var miItem=null;
                    var className=null;
                    for (i=0;i<itemsArray.length;i++) {
                        miItem=itemsArray[i];
                        if (miItem.className==undefined || miItem.className==null) {
                            miItem.setAttributeNode(emptyClassAttribute);
                        }
                        className=miItem.className;
                        if (!( miItem.type=="hidden" || miItem.type=="button" || miItem.style.visibility == "hidden"   )) { // no aplica para hidden's o button's
                            
                            // test campotexto 
                            if (className.indexOf("campo")>=0 && className.indexOf("campotexto")<0) {
                                miItem.className="campotexto "+miItem.className
                            }
                            
                            // test readonly & disabled
                            var underscoreReadonly="_"+miItem.getAttribute("readonly");
                            var underscoreDisabled="_"+miItem.getAttribute("disabled");
                            
                            if (underscoreReadonly=="_" || underscoreReadonly=="_true" || underscoreReadonly=="_readonly" ||
                                underscoreDisabled=="_" || underscoreDisabled=="_true" || underscoreDisabled=="_disabled") 
                            {
                                // añadir un "campodisabled" si aun no esta puesto en ClassName
                                if (className.indexOf("disabled")<0) 
                                {
                                    $(miItem).addClass("campodisabled");
                                }
                            }
                            else
                            {
                                $(miItem).removeClass("campodisabled");
                            }
            
                            // test obligatorio=true
                            if (miItem.getAttribute("obligatorio")!=null && miItem.getAttribute("obligatorio")=='true') {
                                // añadir un "campotexto_ob" si aun no esta puesto en ClassName
                                if (className.indexOf("_ob")<0) {
                                    $(miItem).addClass("campotexto_ob");
                                }
                            }else{
                                if(miItem.className.indexOf("campotexto_ob")>0){                                   
                                    miItem.className= miItem.className.replace("campotexto_ob","");
                                }
                            }
                        }
                        
                    }
                }
            });
            // Fi BUG 26923 - 12/07/2013 - RCL

            /*
            // span's
            itemsArray=document.getElementsByTagName("span");
            if (itemsArray!=null && itemsArray!=undefined) {
                var miItem=null;
                var className=null;
                for (i=0;i<itemsArray.length;i++) {
                    miItem=itemsArray[i];
                    if (miItem.className==undefined || miItem.className==null) {
                        miItem.setAttributeNode(emptyClassAttribute);
                    }
                    className=miItem.className;
        
                    // test campotexto 
                    if (className.indexOf("campo")>=0 && className.indexOf("campotexto")<0) {
                        miItem.className="campotexto "+miItem.className
                    }
        
                    // test obligatorio=true
                    if (miItem.getAttribute("obligatorio")!=null && miItem.getAttribute("obligatorio")=='true') {
                        // añadir un "campotexto_ob" si aun no esta puesto en ClassName
                        if (className.indexOf("_ob")<0) {
                            miItem.className=miItem.className+" campotexto_ob";
                        }
                    }
                }
            }
            */
        
        }

function f_cargar_suplementos () {
          try{
                var afegits = new Array(0);
                <%
                if (request.getSession().getAttribute("CONF_SUPL")!= null){
                    for(int j=0;j<((java.util.List)request.getSession().getAttribute("CONF_SUPL")).size();j++){
                        String  gd = (String)((java.util.Map)((java.util.List)request.getSession().getAttribute("CONF_SUPL")).get(j)).get("TGRUPDADES");
                        %>
                            var TGRUPDADES = '<%=gd%>';
                            if(!objUtiles.existeObjeto(document.getElementById("DSP_"+TGRUPDADES))){
                            var CMOTMOV =    '<%=(java.math.BigDecimal)((java.util.Map)((java.util.List)request.getSession().getAttribute("CONF_SUPL")).get(j)).get("CMOTMOV")%>';
                            var TMOTMOV = "<%=(String)((java.util.Map)((java.util.List)request.getSession().getAttribute("CONF_SUPL")).get(j)).get("TMOTMOV")%>";
                            var SLITERA = '<%=(java.math.BigDecimal)((java.util.Map)((java.util.List)request.getSession().getAttribute("CONF_SUPL")).get(j)).get("SLITERA")%>';
                          
                        <%
                        if (java.util.Collections.frequency((java.util.List)request.getSession().getAttribute("GRUP_DADES"),gd) < 2){
                          request.setAttribute("SLITERA",(java.math.BigDecimal)((java.util.Map)((java.util.List)request.getSession().getAttribute("CONF_SUPL")).get(j)).get("SLITERA"));
                        %>
                        if (!objUtiles.estaVacio(SLITERA) && SLITERA!= 'null' )
                            TMOTMOV = "<axis:alt f="carga_framework" c="SLITERA2" lit="${requestScope.SLITERA}"/>";
                            
                            
                            afegirSuplement(TGRUPDADES,CMOTMOV, TMOTMOV);
                            <%
                        }else{
                            %>
                            
                              if (!estaAfegit(afegits, TGRUPDADES)){
                                afegits[afegits.length]= TGRUPDADES;
                                afegirSuplements(TGRUPDADES,CMOTMOV, TMOTMOV, SLITERA);
                              }
                            <%
                        }
                        %>
                        }
                    <%
                    }
                }%>
                
            } catch (e) {
                   // alert (e.name + " " + e.message);
            }
        } 
        
        function f_limpiar_secciones_vacias(){
             <%
                        if (request.getSession().getAttribute("CONF_SUPL")!= null){
                            for(int j=0;j<((java.util.List)request.getSession().getAttribute("CONF_SUPL")).size();j++){
                              String  gd = (String)((java.util.Map)((java.util.List)request.getSession().getAttribute("CONF_SUPL")).get(j)).get("TGRUPDADES");
                              String  CMOTMOV = (String)((java.util.Map)((java.util.List)request.getSession().getAttribute("CONF_SUPL")).get(j)).get("TGRUPDADES");
                            %>
                             var TGRUPDADES = '<%=gd%>';
                             var CMOTMOV = '<%=CMOTMOV%>';
                           
                            if(objUtiles.existeObjeto(document.getElementById("SECCION_"+TGRUPDADES))){
                             
                              try{
                              
                                
                                  if (!objUtiles.estaHidden("SECCION_"+TGRUPDADES)){
                                      var tab=document.getElementById("SECCION_"+TGRUPDADES);
                                      cont = 0;
                                      var elea = tab.getElementsByTagName('a');
                                         for (i=0; i<elea.length;  i++) {
                                               if (!objUtiles.estaHidden(elea[i].id))
                                                    cont ++;
                                        }
                                      if (cont == 0){
                                        
                                        if(objUtiles.existeObjeto(document.getElementById("SUPL_"+TGRUPDADES))){
                                            document.getElementById("SUPL_"+TGRUPDADES).style.display="none";
                                            document.getElementById("SUPL_"+TGRUPDADES).style.visibility="hidden";
                                        }
                                      }
                                   }
                                }catch(e){}
                                
                            }
                                
                            <%}
                           
                        }%>     
        
        }
        
        function estaAfegit(afegit, GRUPDADES){
            if (afegit.length > 0 ) {
                for (var i = 0;i<afegit.length;i++){
                     if ( objUtiles.utilEquals(afegit[i],GRUPDADES)){
                     return true;
                     }
                }
             }
           return false;
       }
        
         /**
         * Función llamada desde el onload de las pantallas
         **/
         function f_cargar_propiedades_pantalla(pantalla){
                if(typeof f_cargapropietatexpander == 'function') { 
                  if (!objUtiles.estaVacio(pantalla)){
                    toggles_js = new Array();
                    f_cargapropietatexpander_arbol();
                  }else
                    f_cargapropietatexpander();
                }
                if(typeof f_cargar_valores_defecto == 'function') { 
                    f_cargar_valores_defecto();
                }
                if ((objDependencias!=null)&&(typeof objDependencias.modificarPropiedadesSegunModificableYVisible == 'function')) { 
                    objDependencias.modificarPropiedadesSegunModificableYVisible();
                }
                if(typeof f_carga_dependencias == 'function') { 
                    f_carga_dependencias();
                }
                if(typeof revisarEstilos == 'function') { 
                    revisarEstilos();
                }
                
                if (!objUtiles.estaVacio(pantalla) &&  ( objUtiles.utilEquals(pantalla,'axisctr020')) ) {
                  if(typeof f_limpiar_secciones_vacias == 'function') 
                        f_limpiar_secciones_vacias();
                }
              if (!objUtiles.estaVacio(toggles_js)){
              
                return toggles_js;
                }
            }
            
         function afegirSuplement(GRUPDADES, CMOTMOV, TMOTMOV){
             try {
                     var linea =  '<a id="'+CMOTMOV+'" name="'+CMOTMOV+'" href="javascript:f_inicializar_suplemento('+CMOTMOV+', \'DSP_'+GRUPDADES+'\')">';
                     linea = linea +'<img border="0" alt="'+TMOTMOV+'" src="images/suplemento.gif"/></a>';
                     document.getElementById(GRUPDADES).innerHTML = linea;
              } catch (e) {
              }
        }
        
         function afegirSuplements(GRUPDADES, CMOTMOV, TMOTMOV, SLITERA){
             try {
             
             var linea = '<img id="SUPL_'+GRUPDADES+'" name="SUPL_'+GRUPDADES+'" border="0" alt="<axis:alt f="carga_framework" c="LITSUP" lit="1000126"/>"  src="images/suplemento.gif"';
             linea = linea +'onclick="javascript:mostrar_ocultar(\'SECCION_'+GRUPDADES+'\')" />'; 
             document.getElementById(GRUPDADES).innerHTML = linea;
              
             var linea = '<table class="area" align="center">';
             linea = linea +'<tr><th style="width:100%;height:0px"></th></tr>'; 
             linea = linea +'<tr><td><div style="float:right;"> <img style="width:12px;height:12px" onclick="javascript:ocultar(\'SECCION_'+GRUPDADES+'\');" src="images/but_cerrar.gif"></img></div></td></tr>'; 
             
                     <%
                        if (request.getSession().getAttribute("CONF_SUPL")!= null){
                            for(int j=0;j<((java.util.List)request.getSession().getAttribute("CONF_SUPL")).size();j++){
                              String  gd = (String)((java.util.Map)((java.util.List)request.getSession().getAttribute("CONF_SUPL")).get(j)).get("TGRUPDADES");
                            %>
                             var TGRUPDADES = '<%=gd%>';
                                if ( objUtiles.utilEquals(TGRUPDADES,GRUPDADES)){
                                    var CMOTMOV =    '<%=(java.math.BigDecimal)((java.util.Map)((java.util.List)request.getSession().getAttribute("CONF_SUPL")).get(j)).get("CMOTMOV")%>';
                                    var TMOTMOV = "<%=(String)((java.util.Map)((java.util.List)request.getSession().getAttribute("CONF_SUPL")).get(j)).get("TMOTMOV")%>";
                                    var SLITERA = '<%=(java.math.BigDecimal)((java.util.Map)((java.util.List)request.getSession().getAttribute("CONF_SUPL")).get(j)).get("SLITERA")%>';
                                    <%
                                     request.setAttribute("SLITERA",(java.math.BigDecimal)((java.util.Map)((java.util.List)request.getSession().getAttribute("CONF_SUPL")).get(j)).get("SLITERA"));
                                     %>
                                            if (!objUtiles.estaVacio(SLITERA) && SLITERA!= 'null' )
                                                TMOTMOV = "<axis:alt f="carga_framework" c="SLITERA" lit="${requestScope.SLITERA}"/>";
                                    
                                              
                                    
                                    linea = linea +'<tr><td class="titulocaja">';
                                    linea = linea +'<a id="'+CMOTMOV+'" name="'+CMOTMOV+'" href="javascript:ocultar(\'SECCION_'+GRUPDADES+'\');f_inicializar_suplemento('+CMOTMOV+', \'DSP_'+GRUPDADES+'\')">';
                                    linea = linea + TMOTMOV+'</a></td></tr>'; 
                                    
                                }
                            <%
                            }
                        } 
                    %>
                     linea = linea +'</table>';
                     document.getElementById("SECCION_"+GRUPDADES).innerHTML = linea;
              } catch (e) {
                            //alert (e.name + " " + e.message);
                    }
        }
        
         		function retocarPAGE_CSS(pantalla) {
				try{
					 	var heightmodal = this.f_get_height_modal(pantalla);

					  if (heightmodal < 485)
						 heightmodal = 485;
					 if(heightmodal > 950)
						 heightmodal = 950;
		
			
						var PAGE_CSS=document.getElementById("page-css");
    				PAGE_CSS.innerText=".wrapper{width:100%;height:"+heightmodal+"px;overflow: auto;}"
					  $.reinitialiseScroll(); 

			  }catch(e){ }
		}
		
			
			function f_get_height_modal(nid) { //retorna el tamaño de una modal construida en pantalla
				 try{ 
				 	
				 	
					 var mws=parent.document.getElementById("mw_"+nid+"_s");
				
					  var st_heightpx=mws.style.height;
					  var st_height=-1;
						  if (st_heightpx.indexOf("px")>=0) {
						   	st_height=eval(st_heightpx.substring(0,st_heightpx.indexOf("px")));
						  }
						  else {
						   	st_height=eval(st_heightpx);
						  }
						  if (st_height>0) {
						   	st_height=st_height*0.95; // hacerlo un poco mas pequeño - probar cual es el valor correcto
						  }
						
						  
					  return st_height;
					  
				  } catch (e) {
			      return 485;//Si hi ha error, tornem 485 que per defecte es veurà correctament.
			    }
			}
            
            document.onkeydown = function(e){
               
                evt = e ? e:window.event;
                var elem;
                
                if (evt.srcElement)  elem = evt.srcElement;
                else if (evt.target) elem = evt.target;
                
                var charCode = (evt.which) ? evt.which : evt.keyCode;               
                var nameElement  =elem.tagName.toUpperCase();
                
                // PULSAR BOTON SUPR. (tecla 8).
                if(charCode == 8 && (elem.readOnly || elem.disabled || (nameElement!='INPUT' && nameElement!='TEXTAREA'))){                  
                    try{                        
                        evt.preventDefault();
                    }catch(error){ evt.returnValue = false;}
                }
            }
            function f_valida_numeros() {
                if ((event.keyCode < 48) || (event.keyCode > 57)) 
                    event.returnValue = false;
            }
            function f_truncator(numToTruncate, intDecimalPlaces) {
                var p = Math.pow(10, intDecimalPlaces);
                return Math.round(numToTruncate * p) / p;
            }
            
            function f_formatNumber(num, simbol) {
                var locale = "<%=ConfigCache.getConfig().getProperty("locale.formato.numerico")%>";
                var separador;
                var sepDecimal;
                if (locale =="EUR"){
                    separador = ".";
                    sepDecimal = ',';
                }else if (locale =="USA"){
                    separador = ",";
                    sepDecimal = '.';
                }
                simbol = simbol ||'';
                num +='';
                var splitStr = num.split('.');
                var splitLeft = splitStr[0];
                var splitRight = splitStr.length > 1 ? sepDecimal + splitStr[1] : '';
                var regx = /(\d+)(\d{3})/;
                while (regx.test(splitLeft)) {
                    splitLeft = splitLeft.replace(regx, '$1' + separador + '$2');
                }
                return simbol + splitLeft  +splitRight;
            }
        </script>
        